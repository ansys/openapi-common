# check spelling, codestyle
name: Build and Test Package

# run only on main branch.  This avoids duplicated actions on PRs
on:
  pull_request:
  merge_group:
  push:
    tags:
      - "*"
    branches:
      - main

env:
  MAIN_PYTHON_VERSION: '3.10'
  LIBRARY_NAME: 'ansys-openapi-common'
  DOCUMENTATION_CNAME: 'openapi.docs.pyansys.com'

permissions:
  contents: read

jobs:
  code-style:
    name: "Code style"
    runs-on: windows-latest
    steps:
      - uses: ansys/actions/code-style@2cf9a9c43235a000d613c2b13e64c954232a4553  # v9.0.9
        with:
         python-version: ${{ env.MAIN_PYTHON_VERSION }}
         skip-install: "false"

  doc-style:
    name: Documentation Style Check
    runs-on: ubuntu-latest
    steps:
      - name: PyAnsys documentation style checks
        uses: ansys/actions/doc-style@2cf9a9c43235a000d613c2b13e64c954232a4553  # v9.0.9
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ignore-changelogd: true

  doc-build:
    name: Documentation build
    runs-on: ubuntu-latest
    steps:
      - name: "Run Ansys documentation building action"
        uses: ansys/actions/doc-build@2cf9a9c43235a000d613c2b13e64c954232a4553  # v9.0.9
        with:
          check-links: false
          sphinxopts: "-W --keep-going"

  build-wheelhouse:
    name: "Build wheelhouse for latest Python versions"
    runs-on: ${{ matrix.os }}
    needs: code-style
    permissions:
      id-token: write
      attestations: write
    strategy:
       matrix:
           os: [ubuntu-latest, windows-latest]
           python-version: ['3.10', '3.11', '3.12', '3.13']
    steps:
      - uses: ansys/actions/build-wheelhouse@2cf9a9c43235a000d613c2b13e64c954232a4553  # v9.0.9
        with:
          library-name: ${{ env.LIBRARY_NAME }}
          operating-system: ${{ matrix.os }}
          python-version: ${{ matrix.python-version }}
          attest-provenance: true

  tests:
    name: Unit test on supported platforms
    runs-on: ubuntu-latest
    needs: build-wheelhouse
    permissions:
      contents: read
      packages: read
    services:
      # Label used to access the service container
      kdc-server:
        # Github container registry address
        image: ghcr.io/ansys/kdc-container:v0.2
        credentials:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        volumes:
          # This is needed otherwise there won't be enough entropy to generate a new kerberos realm
          - /dev/urandom:/dev/random
          - /tmp/keytabs:/tmp/keytabs
        ports:
          - 749:749
          - 88:88/udp

    container:
      image: python:${{ matrix.python-version }}
      volumes:
        - /tmp/keytabs:/tmp/keytabs
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12', '3.13']

    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2

    - name: Configure host kerberos
      run: |
        apt update
        export DEBIAN_FRONTEND=noninteractive
        apt install -yq krb5-user
        cp ./tests/integration/krb5.conf /etc/krb5.conf
        ./tests/integration/configure_keytab.sh

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install 'tox<4' poetry

    - name: Test with tox
      run: tox -- --with-kerberos

    - name: Upload coverage report
      uses: codecov/codecov-action@v5
      if: ${{ github.actor != 'dependabot[bot]' }}
      with:
        fail_ci_if_error: true
        token: ${{ secrets.CODECOV_TOKEN }}

  build-library:
    name: "Build library"
    runs-on: ubuntu-latest
    needs: [ doc-build, tests ]
    permissions:
      id-token: write
      attestations: write
    steps:
      - uses: ansys/actions/build-library@2cf9a9c43235a000d613c2b13e64c954232a4553  # v9.0.9
        with:
          library-name: ${{ env.LIBRARY_NAME }}
          python-version: ${{ env.MAIN_PYTHON_VERSION }}
          attest-provenance: true

  doc-deploy-dev:
    name: "Deploy development documentation"
    runs-on: ubuntu-latest
    needs: [ build-library ]
    if: github.event_name == 'push' && !contains(github.ref, 'refs/tags')
    steps:
      - uses: ansys/actions/doc-deploy-dev@2cf9a9c43235a000d613c2b13e64c954232a4553  # v9.0.9
        with:
          cname: ${{ env.DOCUMENTATION_CNAME }}
          token: ${{ secrets.GITHUB_TOKEN }}
          doc-artifact-name: documentation-html
          bot-user: ${{ secrets.PYANSYS_CI_BOT_USERNAME }}
          bot-email: ${{ secrets.PYANSYS_CI_BOT_EMAIL }}

  update-changelog:
    name: "Update CHANGELOG for new tag"
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: ansys/actions/doc-deploy-changelog@2cf9a9c43235a000d613c2b13e64c954232a4553  # v9.0.9
        with:
          token: ${{ secrets.PYANSYS_CI_BOT_TOKEN }}
          bot-user: ${{ secrets.PYANSYS_CI_BOT_USERNAME }}
          bot-email: ${{ secrets.PYANSYS_CI_BOT_EMAIL }}

  release:
    name: "Release"
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags')
    needs: [build-library, update-changelog]
    runs-on: ubuntu-latest
    environment: release
    permissions:
      id-token: write
      contents: write
    steps:
    - name: "Download the library artifacts from build-library step"
      uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
      with:
        name: ${{ env.LIBRARY_NAME }}-artifacts
        path: ${{ env.LIBRARY_NAME }}-artifacts

    - name: "Upload artifacts to PyPI using trusted publisher"
      uses: pypa/gh-action-pypi-publish@76f52bc884231f62b9a034ebfe128415bbaabdfc # v1.12.4
      with:
        repository-url: "https://upload.pypi.org/legacy/"
        print-hash: true
        packages-dir: ${{ env.LIBRARY_NAME }}-artifacts
        skip-existing: false

    - uses: ansys/actions/release-github@2cf9a9c43235a000d613c2b13e64c954232a4553  # v9.0.9
      name: "Release to GitHub"
      with:
        library-name: ${{ env.LIBRARY_NAME }}
        token: ${{ secrets.GITHUB_TOKEN }}

  doc-deploy-stable:
    name: "Deploy stable documentation"
    runs-on: ubuntu-latest
    needs: release
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags')
    steps:
      - uses: ansys/actions/doc-deploy-stable@2cf9a9c43235a000d613c2b13e64c954232a4553  # v9.0.9
        with:
          cname: ${{ env.DOCUMENTATION_CNAME }}
          token: ${{ secrets.GITHUB_TOKEN }}
          bot-user: ${{ secrets.PYANSYS_CI_BOT_USERNAME }}
          bot-email: ${{ secrets.PYANSYS_CI_BOT_EMAIL }}
